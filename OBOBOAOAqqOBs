[1mdiff --git a/Assets/Scripts/Enemy.cs b/Assets/Scripts/Enemy.cs[m
[1mindex 6f76a66..28244df 100644[m
[1m--- a/Assets/Scripts/Enemy.cs[m
[1m+++ b/Assets/Scripts/Enemy.cs[m
[36m@@ -2,59 +2,94 @@[m [musing System.Collections;[m
 using System.Collections.Generic;[m
 using UnityEngine;[m
 [m
[31m-public class Enemy : MonoBehaviour[m
[32m+[m[32mpublic class Enemy : MonoBehaviour, Agent[m
 {[m
     public float health;[m
     public float damage;[m
     public float attackCooldown;[m
[31m-    public float velocity;[m
 [m
[31m-    [HideInInspector] public Vector2 targetPosition;[m
[31m-    [HideInInspector] public Vector2 currentPosition;[m
[31m-    [HideInInspector] public float pBest = -1;[m
[31m-    [HideInInspector] public Vector2 pBestPosition;[m
[32m+[m[32m    public GameObject target;[m
[32m+[m
[32m+[m[32m    //Agent interface[m
[32m+[m[32m    [HideInInspector] public Vector2 targetPosition { get; set; }[m
[32m+[m[32m    [HideInInspector] public Vector2 currentPosition { get; set; }[m
[32m+[m[32m    [HideInInspector] public float pBest { get; set; }[m
[32m+[m[32m    [HideInInspector] public Vector2 pBestPosition { get; set; }[m
[32m+[m[32m    [HideInInspector] public Vector2 inertia { get; set; }[m
 [m
[31m-    Rigidbody rb;[m
     Player player;[m
[32m+[m[32m    Rigidbody rb;[m
[32m+[m[32m    float lastSqrMag;[m
[32m+[m[32m    GameObject targetInstance;[m
 [m
     private float cooldown = 0;[m
 [m
[31m-    public float getSoundLevel()[m
[32m+[m[32m    void Awake()[m
     {[m
[31m-        float distance = Vector2.Distance(player.position, currentPosition);[m
[31m-        return Mathf.Max(player.soundLevel - distance, 0);[m
[32m+[m[32m        rb = GetComponent<Rigidbody>();[m
[32m+[m[32m        currentPosition = new Vector2(rb.position.x, rb.position.z);[m
[32m+[m[32m        targetPosition = new Vector2(rb.position.x, rb.position.z);[m
[32m+[m[32m        lastSqrMag = Mathf.Infinity;[m
     }[m
 [m
[31m-    void Awake(){[m
[31m-        Rigidbody rb = GetComponent<Rigidbody>();[m
[31m-        targetPosition.Set( rb.position.x, rb.position.z );[m
[31m-        currentPosition.Set( rb.position.x, rb.position.z );[m
[31m-    }[m
[31m-    [m
     void Start()[m
     {[m
[31m-        GameObject playerObj = GameObject.Find("Player");[m
[31m-        player = playerObj.GetComponent<Player>();[m
[32m+[m[32m        player = GameObject.Find("Player").GetComponent<Player>();[m
     }[m
 [m
     void FixedUpdate()[m
     {[m
[31m-        if (!player)[m
[32m+[m
[32m+[m[32m        currentPosition = new Vector2(rb.position.x, rb.position.z);[m
[32m+[m
[32m+[m[32m        if ( !targetInstance || !targetInstance.activeInHierarchy)[m
         {[m
[31m-            return;[m
[32m+[m[32m            print("create");[m
[32m+[m[32m            targetInstance = Instantiate( target,new Vector3( targetPosition.x, rb.position.y , targetPosition.y ) , Quaternion.identity);[m
         }[m
 [m
[31m-        Vector3 lookDir = new Vector3(targetPosition.x, 0, targetPosition.y) - rb.position;[m
[31m-        float angle = -Mathf.Atan2(lookDir.z, lookDir.x) * Mathf.Rad2Deg;[m
[31m-        rb.MoveRotation(Quaternion.Euler(new Vector3(0, angle, 0)));[m
[31m-        rb.MovePosition(rb.position + (lookDir.normalized * velocity * Time.fixedDeltaTime));[m
[32m+[m[32m        Vector2 targetVector = (targetPosition - currentPosition);[m
[32m+[m
[32m+[m[32m        if (targetVector == Vector2.zero || targetVector.magnitude <= 0.1)[m
[32m+[m[32m        {[m
[32m+[m[32m            rb.position = new Vector3(targetPosition.x, rb.position.y, targetPosition.y);[m
[32m+[m[32m            rb.velocity = Vector3.zero;[m
[32m+[m[32m            print("destroyed");[m
[32m+[m[32m            if( targetInstance ){[m
[32m+[m[32m                Destroy(targetInstance);[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        else[m
[32m+[m[32m        {[m
[32m+[m[32m            Vector3 directionalVector = targetVector.normalized * inertia.magnitude;[m
[32m+[m[32m            rb.velocity = new Vector3(directionalVector.x, 0, directionalVector.y);[m
 [m
[32m+[m[32m            print( rb.velocity + " | " + inertia );[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        updateCooldown();[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public float getFitness()[m
[32m+[m[32m    {[m
[32m+[m[32m        float distance = Vector2.Distance(player.position, currentPosition);[m
[32m+[m[32m        return Mathf.Max(player.soundLevel - distance, 0);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    void updateCooldown()[m
[32m+[m[32m    {[m
         if (cooldown > 0)[m
         {[m
             cooldown -= Time.fixedDeltaTime;[m
         }[m
[32m+[m[32m    }[m
 [m
[31m-        currentPosition.Set(-rb.position.x, -rb.position.z);[m
[32m+[m[32m    void Rotate()[m
[32m+[m[32m    {[m
[32m+[m[32m        Vector3 lookDir = new Vector3(targetPosition.x, rb.position.y, targetPosition.y) - rb.position;[m
[32m+[m[32m        float angle = -Mathf.Atan2(lookDir.z, lookDir.x) * Mathf.Rad2Deg;[m
[32m+[m[32m        rb.MoveRotation(Quaternion.Euler(new Vector3(0, angle, 0)));[m
     }[m
 [m
     void OnTriggerEnter(Collider collider)[m
